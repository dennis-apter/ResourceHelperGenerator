// <auto-generated />

namespace ResourceGenerator.TestProject
{
    using System.Diagnostics;
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    public static class Strings
    {
        private static readonly ResourceManager ResourceManager
            = new ResourceManager("ResourceGenerator.TestProject.Strings", typeof(Strings).Assembly);

        /// <summary>
        /// The argument '{argumentName}' cannot be null.
        /// </summary>
        public static string ArgumentNull(object argumentName)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("ArgumentNull", "argumentName"), argumentName);
        }

        /// <summary>
        /// The string argument '{argumentName}' cannot be empty.
        /// </summary>
        public static string StringArgumentEmpty(object argumentName)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("StringArgumentEmpty", "argumentName"), argumentName);
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = ResourceManager.GetString(name);

            Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
